#-*- coding:utf-8 -*-
import json
import sys
#from optparse import OptionParser,OptionValueError
import os
from re import *

#usage = "usage:%prog [options] keyword!"
#parser = OptionParser(usage)

#parser.add_option("-l","--level",action='store',dest='level',type="int",metavar="LEVEL",help="select level")
#parser.add_option("-f","--file",action='store',dest='filename',type="string",metavar="FILE",help="input filename")

#(options, args) = parser.parse_args()


def get_api(Data,f,level):
  i=0
  while i < len(Data["behavior"]["processes"]):
    j=0
    while j < len(Data["behavior"]["processes"][i]["calls"]):
      api = Data["behavior"]["processes"][i]["calls"][j]['api']
      k=0
      while k < len(Data["behavior"]["processes"][i]["calls"][j]['arguments']):
        name = Data["behavior"]["processes"][i]["calls"][j]['arguments'][k]['name']
        value = Data["behavior"]["processes"][i]["calls"][j]['arguments'][k]['value']
        value = value.replace('\n','')
        value = value.replace('\t','')
        value = value.replace(' ','')
        value = value.replace(',','')
        r = compile(r"malware\d*")
        value = r.sub('malware',value)
        if level == 0:
          f.write(api+'\n')
        elif level == 1:
          f.write(api+':'+name+'\n')
        elif level == 2:
          f.write(api+":"+name+":"+value+'\n')
        k+=1
      j+=1
    i+=1

def getdirs(path):
  dirs = []
  for item in os.listdir(path):
    if os.path.isdir(os.path.join(path,item)):
      dirs.append(item)
  return dirs

def write_api(dirlist,readpath,writepath,level):
  for dir in dirlist:
    files = os.listdir(readpath+dir)
    for file in files:
      if file.endswith('.json'):
        f = open(readpath+dir+'/'+file)
        data = json.load(f)
        f.close()
        f = open(writepath+dir+'/'+file[:len(file)-5]+'_level'+str(level)+'.txt',"w")
        get_api(data,f,level)
        #print "%s,complete!" % file
        f.close()

def main(level=0):
#dir path
  cor_rep = "./../report/cor/"
  cor_dir = "./../correct_data/"
  mal_rep = "./../report/mal/"
  mal_dir = "./../malware_data/"
  if level==0 or level==1 or level==2:
    print "level OK!"
  else:
    print "Please input level between 0 and 2!"
    exit()
#get dir's list
  cor_reps = getdirs(cor_rep)
  cor_dirs = getdirs(cor_dir)
  write_api(cor_dirs,cor_rep,cor_dir,level)
  mal_reps = getdirs(mal_rep)
  mal_dirs = getdirs(mal_dir)
  write_api(mal_dirs,mal_rep,mal_dir,level)
  print "Collecting api finished!"
